#进程查看
pstree 查看进程树 -p 参数显示进程号
ps -aux 列出目前所有的正在内存中的进程(以BSD格式显示)
ps -ef 列出目前所有的正在内存中的进程(以标准格式显示)
ps -aux | head -5

#结果解释
USER(运行此进程的用户名)    PID(进程号) %CPU %MEM    VSZ(虚拟内存使用)   RSS(占用的固定内存) TTY(运行终端)      STAT(状态) START(进程被触发运行的时间)   TIME(进程实际使用cpu的时间) COMMAND(由哪个命令所执行)
#TTY:该进程是在哪个终端上运行，若与终端无关，则显示？，另外tty1-tty6是本机上的登入者程序，若为pts/0等等的，则表示为由网络连接进主机的程序
#STAT:该进程目前的状态，Linux进程有5种基本状态：
    R：正在运行或正在运行队列种等待
    S：该程序目前正在睡眠(sleep)当中，但可被某些讯号唤醒(signal)
    T: 该程序目前暂停了(ctrl + z)
    Z：该程序已经终止，但是其子程序却无法正常终止，造成zombie(僵尸)程序的状态
    D：不可中断状态
    ctal + c 发送SIGINT信号，终止一个进程
    ctrl + z 发送SIGSTOP信号，挂起一个进程
        < 高优先级的
        N 低优先级的
        s 包含子进程
        l 多线程
        + 前台程序

#top命令用于查看活动进程(没3s刷新一次)
top -p 进程号 #用于查看对应进程的信息
第一行是任务队列信息 同uptime的执行结果
uptime
10:12:12 up  2:27,                1 user,        load average: 0.60, 0.66, 0.51
当前时间 系统运行时间,格式为时:分 当前登录用户数 系统负载,即任务队列的平均长度
                                                 三个值分别为1min,5min,15min前到现在的平均值
#一般来说，每个cpu内核当前活动进程数不大于3，则系统运行
#变现良好！当然，这里说的是每个cpu内核，也就是说你的主机
#如果是四核cpu的话，那么只要uptime最后输出的一串字符数值
#小于4*3=12即表示系统负载不是很严重
#
#按空格可以立即刷新
#M对内存排序显示，P对cpu排序显示
#>往下翻页，<往上翻页

#kill 控制(关闭)进程
常用信号：
1 HUP 重新加载配置文件，类似重启
2 INT 和ctrl+c 一样，一般用于通知前台进程组终止进程
9 KILL 强行中断(杀死某个进程)
19 STOP 和ctrl+z类似

killall xxx #通过程序名称杀死所有的进程
或者用pkill也可以

#优先级控制(top中的NI列即为优先级)
nice值 -20~19 越小优先级越高 普通用户0~19
#nice控制优先级
nice -n 优先级数字(-20~19) 执行命令 
如：nice -n -5 vim a.txt #静态优先级控制
renice -n 5 PID #动态优先级控制

#查看后台进程
jobs
命令 & #可以创建后台进程
#把后台进程调到前台
fg 对应序号

#查看内存使用状况
free -m #m参数表示以mb为单位
#buffer缓冲从磁盘中读出的内容
#cache缓存需要写入磁盘的内容
#目前以不在度buffer和cache分开存放

#清空缓存
方式一：reboot
方式二：echo 3 > /proc/sys/vm/drop_caches

#nohup ctrl+z & 等方式创建的后台进程是临时性的，
#关闭终端即停止
screen #可以创建在终端关闭后继续运行的后台进程
(1)键入scree
(2)创建后台指令
(3)ctrl + a + d  出现detached表明挂起成功，
    可以关闭终端 #将指令调到后台
(4)screen -ls #查看挂起的终端命令
(5)screen -r 编号(步骤(4)显示的)#调出挂起程序
