# 重點在那個 - ，一般來說，如果需要 stdout/stdin 時，但偏偏又沒有檔案，
# 有的只是 - 時，那麼那個 - 就會被當成 stdin 或 stdout ～

2>&1  #将2>重定向到1>
1>&2  #将1>重定向到2>


#linux下的命令都是从左往右执行的
cmd1 && cmd2  #前者成立，后者执行
#1. 若 cmd1 执行完毕且正确执行($?=0),则开始执行 cmd2。 2. 若 cmd1 执行完毕且为错误 ($?≠0),则 cmd2 不执行。
cmd1 || cmd2  #前者不成立，后者执行
#1. 若 cmd1 执行完毕且正确执行($?=0),则 cmd2 不执行。 2. 若 cmd1 执行完毕且为错误 ($?≠0),则开始执行 cmd2。

cmd1 && cmd2 || cmd3  #cmd1成功则执行cmd2，否则执行cmd3
             #一般cmd2和cmd3是肯定可以执行成功的命令

tee  #同时想标准输出和文件重定向，配合管道命令可以做多向的重定向
tee -a  #tee命令默认向文件写，-a参数是追加

#將 /etc/passwd 內的第一欄取出，僅取三行，使用 id 這個指令將每個帳號內容秀出來
cut -d ':' -f 1 /etc/passwd | head -n 3 | xargs -n 1 id
# 透過 -n 來處理，一次給予一個參數

# 很多指令其實並不支援管線命令，因此我們可以透過 xargs 來提供該指令引用 standard input
