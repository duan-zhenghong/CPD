#note

文件描述符：内核利用文件描述符(file descriptor)来访问文
件。文件描述符是非负整数。打开现存文件或新建文件时，内
核会返回一个文件描述符。读写文件也需要使用文件描述符来
制定待读写的文件。
linux下一切皆文件
STDIN 标准输入 如：键盘文件 文件描述符：0
STDOUT 标准输出 屏幕终端 文件描述符：1
STDERR 错误输出 屏幕终端 文件描述符：2
/dev/null #黑洞文件，多余信息可以放入
输出重定向： 
> #标准输出重定向到xxx，这里1缺省
1> #同一个意思，1代表标准输出
#注意以上操作，不对错误内容进行重定向
2> #表示标准错误输出的重定向，只记录错误的内容，可以对
   #错误内容重定向
2> xxx >&2 #将正确和错误内容都重定向到xxx，&是等同于的
           #意思，1>等同于2(1省略)
&> #表示混合输出 &> xxx 作用同上
输入重定向：
< 

wc xxx  #查看文件的行数、字数、字符数
269  457                 9651    note.txt.link
行数 字数(以空格为分隔符)  字节数

tee #将输入重定向到文件，同时输出到屏幕
-a 可以追加

which #查看可执行文件的位置，会打印出绝对路径
whereis #查看可执行文件的位置及相关信息，打印出路径
locate #配合数据库缓存，快速查看文件位置，
       #新建的文件查找不到，用updatedb更新一下数据库即可


#搜索文件系统，实现实时搜索
find [目录] [条件] [动作] #默认搜索当前目录
条件：
(1)用户和组：-user -group
如：find /home/ -user kernellmd
(2)文件类型：-type (f 普通文件(-开头)，d 目录(d打头)，
l 链接(l打头)，p 管道，c 字符文件(c打头，/dev/null也是
字符文件)，b 块文件(b打头)，s socket文件)
如：find /home -type d
(3)文件名：-name
如：find /home -name *user* #查找包含user文件名的文件
(4)大小：-size +NM 查找大于N兆的文件
               -NM 查找小于N兆的文件
如：find /boot -size +2M #查找/boot下大于2兆的文件
(5)时间：-mtime -ctime -atime
+ 不包含今天 +1指48小时之前 2 和 +1 等同
- 包含今天   -1指一天之内创建的文件 -2 48小时之内创建的文件
如：find /root/ -mtime -3 #查找root目录下72小时内被修改过的文件
ctime：最近改动时间
atime：最近访问时间
mtime：最近修改时间 
#用stat命令可以查看这三个时间,ll命令默认mtime
#当文件的属性(权限，拥有者)发生改变时，ctime会改变
#当文件内容发生改变时，ctime和mtime都会改变
#当文件被访问时，atime会改变，cat命令会使atime改变


ls 查看时间
#ls -lc 或者ll -c 查看文件的ctime
#ls -lu 或者ll -u 查看文件的utime
#ls -l  或者ll    查看文件的mtime

(6)文件权限：-perm
如：find /boot -perm 755 #查找boot目录下权限为755的文件
    find xxx -perm -777 #知道包含777权限的文件，文件权限下界，+会指定权限上界
(7)目录深度：-maxdepth 数字
(8)多条件查找：-a(-and) -o(-or) !(-not)
如：find /boot/ -size +4M -a -size -8M #查找boot目录下大于4兆小于8兆的文件
    find ! -type f -a perm -001 #找出当前目录下至少其他人可执行的非普通文件

动作：
-ls 列出
-ok 确认
-exec 执行某命令
如：find xxx -type f -exec rm {} \;
#删除xxx目录下的普通文件，注意{}和\之间有空格


grep #对文件进行过滤，查找出包含指定内容的行
     #标准书写应对查找内容加引号，某些情况下不加引号可
     #能无法查找出内容
-a 將 binary 檔案以 text 檔案的方式搜尋資料
-c ：計算找到 '搜尋字串' 的次數
-n ：順便輸出行號
-v 反转，查找出文件中不带xxx内容的行 例如：grep -v "xxx" 文件名(带路径)(有-v是过滤掉，无-v是过滤出来) 
-i 忽略大小写
--color=auto ：可以將找到的關鍵字部分加上顏色的顯示喔！
-A ：後面可加數字，為 after 的意思，除了列出該行外，後續的 n 行也列出來；
-B ：後面可加數字，為 befer 的意思，除了列出該行外，前面的 n 行也列出來；
^# 过滤文件中所有以#开头的行(^是以xxx开头的意思，这里可以用别的内容替换#)
例如：grep -v "^#" 文件名 (获取文件中的所有非注释行)
#$ 与以上相反
^$ 过滤文件中的空行 -n可显示行号
利用管道，可过滤文件中的空行和以#开头的内容，显示文件的真实有效的信息
dmesg | grep -n -A3 -B2 --color=auto 'qxl'
# 你會發現關鍵字之前與之後的數行也被顯示出來！這樣可以讓你將關鍵字前後資料捉出來進行分析啦！

再次強調：『正規表示法的特殊字元』與一般在指令列輸入指令
的『萬用字元』並不相同，例如，在萬用字元當中的 * 代表的是
『 0 ~ 無限多個字元』的意思，但是在正規表示法當中， * 則
是『重複 0 到無窮多個的前一個 RE 字符』的意思～使用的意義
並不相同，不要搞混了。
